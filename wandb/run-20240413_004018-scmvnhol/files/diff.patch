diff --git a/.vscode/launch.json b/.vscode/launch.json
index 48212b8..1a249bb 100644
--- a/.vscode/launch.json
+++ b/.vscode/launch.json
@@ -20,9 +20,9 @@
             "program": "/home/huseyin/fungtion/dannpy_yeniden/DANN_py3/main.py",
             "args": ["-bs", "128", 
                      "-ll","2",
-                     "-dcms","0.25","1","2","4","8",
-                     "-Mss","100","60","80","100",
-                     "-Mt","50",
+                     "-dcms","1","2","4","8",
+                     "-Mss","120","60","80","100",
+                     "-Mt","20",
                      "-Ns","6000",
                      "-Nt","6000",
                      "-r","1",
diff --git a/huseyin_functions.py b/huseyin_functions.py
index 64cd0a2..dc211a1 100644
--- a/huseyin_functions.py
+++ b/huseyin_functions.py
@@ -76,6 +76,9 @@ def distribute_apples(M, N):
         break
   
   random.shuffle(distribution)
+  while distribution[-1] == 0:
+     random.shuffle(distribution)
+     
   return distribution
 
 def distribute_apples_new(M, K):
diff --git a/main.py b/main.py
index 81c56f6..7c9fae0 100644
--- a/main.py
+++ b/main.py
@@ -146,14 +146,6 @@ if __name__ == '__main__':
 					## create labeled and unlabeled dataloaders seperately:
 					## (in order to prevent using more labeled total data than specified Ms and Mt values)
 
-					### how many batches are there in each epoch? former len_dataloader. min(Ks,Kt) will be used
-					### for total number of iterations of each epoch. (this is necessary to maintain epoch structure)
-					Ks = int(np.floor(Ns/batch_size)) 
-					Kt = int(np.floor(Nt/batch_size))
-					K = min(Ks,Kt) 
-
-
-
 					### source dataloaders
 					dataloader_source_labeled = DataLoader(
 						dataset=dataset_source_labeled,
@@ -208,18 +200,19 @@ if __name__ == '__main__':
 					best_accu_t = 0.0
 					for epoch in range(n_epoch):
 
-						### distribution of number of labeled samples per batch
-						Msx_list = distribute_apples(Ms-1,Ks-1)
-						Mtx_list = distribute_apples(Mt-1,Kt-1)
-						Msx_list.append(1)
-						Mtx_list.append(1)
-
 						# create iterators:
 						source_unlabeled_iter = iter(dataloader_source_unlabeled)
 						source_labeled_iter = iter(dataloader_source_labeled)
 						target_unlabeled_iter = iter(dataloader_target_unlabeled)
 						target_labeled_iter = iter(dataloader_target_labeled)
-												
+
+						Ks = len(source_unlabeled_iter)
+						Kt = len(target_unlabeled_iter)
+						K = min(Ks,Kt)
+
+						### distribution of number of labeled samples per batch
+						Msx_list = distribute_apples(Ms,Ks)
+						Mtx_list = distribute_apples(Mt,Kt)										
 
 						for i in range(K): 
 							
diff --git a/wandb/debug-internal.log b/wandb/debug-internal.log
index 7b4c95c..002fd23 120000
--- a/wandb/debug-internal.log
+++ b/wandb/debug-internal.log
@@ -1 +1 @@
-run-20240412_152017-hm3snd36/logs/debug-internal.log
\ No newline at end of file
+run-20240413_004018-scmvnhol/logs/debug-internal.log
\ No newline at end of file
diff --git a/wandb/debug.log b/wandb/debug.log
index 4c99b18..2f95012 120000
--- a/wandb/debug.log
+++ b/wandb/debug.log
@@ -1 +1 @@
-run-20240412_152017-hm3snd36/logs/debug.log
\ No newline at end of file
+run-20240413_004018-scmvnhol/logs/debug.log
\ No newline at end of file
diff --git a/wandb/latest-run b/wandb/latest-run
index 43104a7..cc235ca 120000
--- a/wandb/latest-run
+++ b/wandb/latest-run
@@ -1 +1 @@
-run-20240412_152017-hm3snd36
\ No newline at end of file
+run-20240413_004018-scmvnhol
\ No newline at end of file
